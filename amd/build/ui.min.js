define("tiny_translations/ui",["exports","tiny_translations/modal","core/modal_events","core/modal_factory","./options"],(function(_exports,_modal,_modal_events,_modal_factory,_options){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny Replace translation hash.
   *
   * @module      tiny_translations/ui
   * @copyright   2023 Rajneel Totaram <rjnlfj@yahoo.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.handleAction=void 0,_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_modal_factory=_interopRequireDefault(_modal_factory);_exports.handleAction=editor=>{displayDialogue(editor)};const getTemplateContext=(editor,data)=>Object.assign({},{elementid:editor.id},data),displayDialogue=async function(editor){let data=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const modal=await _modal_factory.default.create({type:_modal.default.TYPE,templateContext:getTemplateContext(editor,data),large:!0});modal.show();const $root=modal.getRoot();$root.on(_modal_events.default.save,((event,modal)=>{handleOK(editor,modal,data)}))},handleOK=async(editor,modal,data)=>{replaceHash(editor,modal,data)},replaceHash=(editor,modal,data)=>{let translationhash,initialcontent=editor.getContent();initialcontent=initialcontent.replaceAll(/(?:<p>|<p class="translationhash">)\s*<span\s*data-translationhash\s*=\s*['"]+([a-zA-Z0-9]+)['"]+\s*>\s*<\/span>\s*<\/p>/g,""),translationhash='<p class="translationhash"><span data-translationhash="'+(0,_options.getUnusedHash)(editor)+'"></span></p>',editor.setContent(translationhash+initialcontent)}}));

//# sourceMappingURL=ui.min.js.map