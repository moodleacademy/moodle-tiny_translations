define("tiny_translations/commands",["exports","editor_tiny/utils","core/str","./common","./options"],(function(_exports,_utils,_str,_common,_options){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getSetup=void 0;
/**
   * Commands helper for the Moodle tiny_translations plugin.
   *
   * @module      plugintype_pluginname/commands
   * @copyright   2023 Andrew Lyons <andrew@nicols.co.uk>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
const insertTranslationHash=(editor,translationHash)=>{const translationHashElement=(translationHash=>{const translationHashElement=document.createElement("span");return translationHashElement.dataset.translationhash=translationHash,translationHashElement.setAttribute("name","translationhash"),translationHashElement})(translationHash);return editor.getBody().prepend(translationHashElement),translationHashElement};_exports.getSetup=async()=>{const[buttonText,buttonImage]=await Promise.all([(0,_str.get_string)("buttontitle",_common.component),(0,_utils.getButtonImage)("icon",_common.component)]);return editor=>{if(editor.ui.registry.addIcon(_common.icon,buttonImage.html),editor.ui.registry.addToggleButton(_common.buttonName,{icon:_common.icon,tooltip:buttonText,onAction:()=>alert("Todo: Show confirmation dialog.")}),"id_substitutetext_editor"===editor.getElement().id)return;let translationHashElement;editor.on("init",(()=>{const newTranslationHash=(0,_options.getUnusedHash)(editor);newTranslationHash&&(translationHashElement=editor.getBody().querySelector("[data-translationhash]"),translationHashElement?translationHashElement.setAttribute("name","translationhash"):translationHashElement=insertTranslationHash(editor,newTranslationHash))})),editor.on("submit",(()=>{((editor,translationHashElement)=>{const newTranslationHash=(0,_options.getUnusedHash)(editor),translationHash=(null==translationHashElement?void 0:translationHashElement.dataset.translationhash)||newTranslationHash,currentHashes=editor.dom.select("span[data-translationhash]"),exists=currentHashes.some((hashElement=>hashElement.dataset.translationhash===translationHash));currentHashes.filter((hashElement=>hashElement.dataset.translationhash!==translationHash)).forEach((hashElement=>editor.dom.remove(hashElement))),exists||insertTranslationHash(editor,translationHash)})(editor,translationHashElement),editor.getContent()===translationHashElement.outerHTML&&editor.setContent(""),editor.save()}))}}}));

//# sourceMappingURL=commands.min.js.map