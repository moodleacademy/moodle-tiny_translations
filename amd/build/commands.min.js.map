{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands helper for the Moodle tiny_translations plugin.\n *\n * @module      tiny_translations/commands\n * @copyright   2023 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {handleAction, insertTranslationHash, findTranslationHashElements, isEmptyContent} from './ui';\nimport {\n    component,\n    buttonName,\n    icon,\n} from './common';\nimport {getUnusedHash} from './options';\n\n/**\n * Get the setup function for the buttons.\n *\n * This is performed in an async function which ultimately returns the registration function as the\n * Tiny.AddOnManager.Add() function does not support async functions.\n *\n * @returns {function} The registration function to call within the Plugin.add function.\n */\nexport const getSetup = async() => {\n    const [\n        buttonText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('buttontitle', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        // Translations editor should not add translation spans.\n        if (editor.getElement().id === 'id_substitutetext_editor') {\n            return;\n        }\n\n        // Register the Icon.\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the Menu Button.\n        editor.ui.registry.addToggleButton(buttonName, {\n            icon,\n            tooltip: buttonText,\n            onAction: () => handleAction(editor),\n        });\n\n        let translationHash;\n        let translationHashElement;\n\n        // Add a handler to set up the translation hash when the content is initialised.\n        editor.on('init', () => {\n            const newTranslationHash = getUnusedHash(editor);\n\n            if (!newTranslationHash) {\n                // There is no translation hash to use for this field.\n                return;\n            }\n\n            let translationHashSpan;\n\n            translationHashSpan = editor.getBody().querySelector('[data-translationhash]');\n\n            if (translationHashSpan) {\n                // Ensure that the hash span element is wrapped in a <p> tag, with appropriate 'class' applied.\n                if (!translationHashSpan.parentElement.classList.contains('translationhash')) {\n                    // The translation span tag is on its own.\n                    // This is old syntax and we should convert it.\n                    translationHash = translationHashSpan?.dataset.translationhash;\n\n                    // Strip out the old translation span element.\n                    translationHashSpan.remove();\n\n                    // Add the translation span within a <p> tag.\n                    translationHashElement = insertTranslationHash(editor, translationHash);\n                }\n\n                translationHashElement = translationHashSpan.parentElement;\n                translationHash = translationHashSpan?.dataset.translationhash;\n            } else {\n                // No translation span tag found, so add one.\n                translationHashElement = insertTranslationHash(editor, newTranslationHash);\n                translationHash = translationHashElement?.firstElementChild.dataset.translationhash;\n            }\n        });\n\n        // Add a handler to unset the content if it only contains the translation hash.\n        editor.on('submit', () => {\n            // Before saving, check that content has a translation span tag.\n            // If one doesn't exit:\n            //     Add back the one that was originally there, OR\n            //     Add a new translation span tag.\n            if (!findTranslationHashElements(editor, editor.getContent())) {\n                // No translation span tag found, so add one.\n                translationHashElement = insertTranslationHash(editor, translationHash);\n            }\n\n            // No need for translation span tags when editor content is \"empty\".\n            // This is needed otherwise quiz questions will have empty/blank options.\n            if (isEmptyContent(editor, editor.getContent())) {\n                editor.setContent('');\n            }\n\n            // We must call save here to ensure that the most recent content is saved to the textarea.\n            editor.save();\n        });\n    };\n};\n"],"names":["async","buttonText","buttonImage","Promise","all","component","editor","getElement","id","translationHash","translationHashElement","ui","registry","addIcon","icon","html","addToggleButton","buttonName","tooltip","onAction","on","newTranslationHash","translationHashSpan","getBody","querySelector","parentElement","classList","contains","_translationHashSpan","dataset","translationhash","remove","_translationHashSpan2","_translationHashEleme","firstElementChild","getContent","setContent","save"],"mappings":"qQAyCwBA,gBAEhBC,WACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,cAAeC,oBACzB,yBAAe,OAAQA,4BAGnBC,YAE2B,6BAA3BA,OAAOC,aAAaC,cAcpBC,gBACAC,uBAVJJ,OAAOK,GAAGC,SAASC,QAAQC,aAAMZ,YAAYa,MAG7CT,OAAOK,GAAGC,SAASI,gBAAgBC,mBAAY,CAC3CH,KAAAA,aACAI,QAASjB,WACTkB,SAAU,KAAM,oBAAab,UAOjCA,OAAOc,GAAG,QAAQ,WACRC,oBAAqB,0BAAcf,YAEpCe,8BAKDC,uBAEJA,oBAAsBhB,OAAOiB,UAAUC,cAAc,0BAEjDF,oBAAqB,oDAEhBA,oBAAoBG,cAAcC,UAAUC,SAAS,mBAGtDlB,6CAAkBa,2DAAAM,qBAAqBC,QAAQC,gBAG/CR,oBAAoBS,SAGpBrB,wBAAyB,6BAAsBJ,OAAQG,iBAG3DC,uBAAyBY,oBAAoBG,cAC7ChB,8CAAkBa,4DAAAU,sBAAqBH,QAAQC,oBAC5C,2BAEHpB,wBAAyB,6BAAsBJ,OAAQe,oBACvDZ,8CAAkBC,+DAAAuB,sBAAwBC,kBAAkBL,QAAQC,oBAK5ExB,OAAOc,GAAG,UAAU,MAKX,mCAA4Bd,OAAQA,OAAO6B,gBAE5CzB,wBAAyB,6BAAsBJ,OAAQG,mBAKvD,sBAAeH,OAAQA,OAAO6B,eAC9B7B,OAAO8B,WAAW,IAItB9B,OAAO+B"}